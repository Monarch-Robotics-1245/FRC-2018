package org.usfirst.frc.team1245.robot.commands;

import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.AnalogGyro;
import edu.wpi.first.wpilibj.interfaces.Gyro;
import edu.wpi.first.wpilibj.Timer;
import org.usfirst.frc.team1245.robot.Robot;
import org.usfirst.frc.team1245.robot.RobotMap;
import org.usfirst.frc.team1245.robot.Side;

/**
 * Created by Zelie on 2/5/18.
 */
public class GyroDrive extends Command {

    private Gyro gyro;
    private Timer timer;
    private boolean finished = false;
    private Side sideSwitch, sideRobot;
    
    private double gyroAngle, temp, gyroTemp;

    public GyroDrive(Side sideSwitch, Side sideRobot) {
        requires(Robot.drivetrain);

        timer = new Timer();
        this.sideSwitch = sideSwitch;
        this.sideRobot = sideRobot;
    }
    
    public GyroDrive() {
    	new GyroDrive(Side.Right, Side.Center); //because crashing because we don't have a default sucks
    }

    protected void initialize() {
        timer.start();
    }

    protected void execute() {
    	if(this.sideRobot==Side.Center && this.sideSwitch == Side.Right) {//add sideways movement
    		if(timer.get()<1.45) {//middle, drive up, shoot, back, drop, we don't need to release as it shoots up and into it.
    			Robot.drivetrain.getDrivetrain().driveCartesian(.5, 0, 0);//0,.5,.03
    		} else if(timer.get()<2.2){
    			Robot.drivetrain.getDrivetrain().driveCartesian(.2, 0, 0);
    		} else if(timer.get()<3.2){
    			Robot.drivetrain.getDrivetrain().driveCartesian(0, 0, 0);
    			Robot.gripper.rightArmOfZanathyr.set(0.8);
    			Robot.gripper.leftArmOfZanathyr.set(0.8);
    		} else if(timer.get()<4.5){
    			Robot.drivetrain.getDrivetrain().driveCartesian(-.2, 0, 0);
    			Robot.gripper.rightArmOfZanathyr.set(0);
    			Robot.gripper.leftArmOfZanathyr.set(0);
    		} else {
    			Robot.releaseSolenoid.release();
    			Robot.drivetrain.getDrivetrain().driveCartesian(0, 0, 0);
    		}
    	}
    }

    @Override
    protected boolean isFinished() {
        return finished;
    }
}